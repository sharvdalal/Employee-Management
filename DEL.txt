 $query = $this->Payrolls->find()
        ->select([
            'department' => 'Employees.department',
            'base_pay_total' => 'SUM(Payrolls.base_salary)',
            'bonus_total' => 'SUM(CASE WHEN PayrollAdjustments.type = "Bonus" THEN PayrollAdjustments.amount ELSE 0 END)',
            'deduction_total' => 'SUM(CASE WHEN PayrollAdjustments.type = "Deductions" THEN PayrollAdjustments.amount ELSE 0 END)',
            'net_payment' => 'SUM(Payrolls.base_salary + CASE WHEN PayrollAdjustments.type = "Bonus" THEN PayrollAdjustments.amount ELSE 0 END - CASE WHEN PayrollAdjustments.type = "Deductions" THEN PayrollAdjustments.amount ELSE 0 END)'
        ])
        ->contain(['Employees', 'PayrollAdjustments']) 
        ->where([
            'Payrolls.month' => $month,
            'Payrolls.year' => $year,
        ])
        ->group('Employees.department')
        ->enableHydration(false); 

    $result = $query->toArray();














{

        $query1 = $this->Employees->find()
            ->innerJoinWith('Payrolls', function ($q) use ($month, $year) {
                return $q->where([
                    'Payrolls.month' => $month,
                    'Payrolls.year' => $year
                ]);
            })
            ->leftJoinWith('Payrolls.PayrollAdjustments', function ($q) {
                return $q->where([
                    'PayrollAdjustments.payroll_id = Payrolls.id'
                ]);
            })
            ->select([
                'department' => 'Employees.department',
                'total_bonus' => $this->Employees->query()->func()->sum(
                    $this->Employees->query()->newExpr('CASE WHEN PayrollAdjustments.type = "Bonus" THEN PayrollAdjustments.amount ELSE 0 END')
                ),
                'total_deductions' => $this->Employees->query()->func()->sum(
                    $this->Employees->query()->newExpr('CASE WHEN PayrollAdjustments.type = "Deductions" THEN PayrollAdjustments.amount ELSE 0 END')
                ),
            ])
            ->group('Employees.department');
        $queryArray1 = $query1->enableHydration(false)->toArray();


        $query2 = $this->Payrolls->find()
            ->leftJoinWith('Employees', function ($q) use ($month, $year) {
                return $q->where([
                    'Payrolls.month' => $month,
                    'Payrolls.year' => $year
                ]);
            })
            ->select([
                'department' => 'Employees.department',
                'total_base_salary' => $this->Payrolls->query()->func()->sum('Payrolls.base_salary')
            ])
            ->group('Employees.department')
            ->enableHydration(false);
        $queryArray2 = $query2->toArray();

        $this->set(compact('query1', 'query2', 'month', 'year'));
       

    }


























        {

        $query = $this->Employees->find()
            ->select([
                'departments' => 'Employees.department',
                'month' => 'Payrolls.month',
                'year' => 'Payrolls.year',
                'total_base_salary' => $this->Payrolls->find()->func()->sum('Payrolls.base_salary'),
                'total_bonus' => $this->Employees->find()->func()->sum('TotalAdjustments.total_bonus'),
                'total_deductions' => $this->Employees->find()->func()->sum('TotalAdjustments.total_deductions'),
            ])
            ->leftJoin(
                ['Payrolls'],
                ['Employees.id = Payrolls.employee_id']
            )
            ->leftJoin(
                [
                    'TotalAdjustments' =>
                    $this->PayrollAdjustments->query()
                        ->select([
                            'payroll_id' => 'PayrollAdjustments.payroll_id',
                            'total_bonus' => $this->PayrollAdjustments->query()->func()->sum(
                                $this->PayrollAdjustments->query()->newExpr('CASE WHEN PayrollAdjustments.type = "Bonus" THEN PayrollAdjustments.amount ELSE 0 END')
                            ),
                            'total_deductions' => $this->PayrollAdjustments->query()->func()->sum(
                                $this->PayrollAdjustments->query()->newExpr('CASE WHEN PayrollAdjustments.type = "Deductions" THEN PayrollAdjustments.amount ELSE 0 END')
                            )
                        ])
                        ->group('PayrollAdjustments.payroll_id')
                ],
                ['Payrolls.id = TotalAdjustments.payroll_id']
            )
            ->where(['Payrolls.month' => "March"])
            ->group(['Employees.department', 'Payrolls.month', 'Payrolls.year']);



        

        $Qarray = $query->enableHydration(false)->toArray();
        $ok = 1;
    }